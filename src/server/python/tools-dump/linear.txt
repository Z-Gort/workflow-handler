{"name":"linear-update-issue","label":"Update Issue","description":"Updates an existing Linear issue. Can modify title, description, assignee, state, project, team, labels, priority, and dates. Returns updated issue details. Uses OAuth authentication. See Linear docs for additional info [here](https://developers.linear.app/docs/graphql/working-with-the-graphql-api#creating-and-editing-issues).","inputSchema":{"jsonSchema":{"type":"object","properties":{"teamId":{"type":"string","description":"The identifier or key of the team associated with the issue"},"issueId":{"type":"string","description":"The issue to update"},"title":{"type":"string","description":"The title of the issue."},"description":{"type":"string","description":"The issue description in markdown format"},"teamIdToUpdate":{"type":"string","description":"The identifier or key of the team to update the issue to"},"stateId":{"type":"string","description":"The state (status) to assign to the issue"},"assigneeId":{"type":"string","description":"The user to assign to the issue"}},"required":["teamId","issueId"],"additionalProperties":false,"$schema":"http://json-schema.org/draft-07/schema#"}}}
{"name":"linear-search-issues","label":"Search Issues","description":"Searches Linear issues by team, project, assignee, labels, state, or text query. Supports pagination, ordering, and archived issues. Returns array of matching issues. Uses OAuth authentication. See Linear docs for additional info [here](https://developers.linear.app/docs/graphql/working-with-the-graphql-api).","inputSchema":{"jsonSchema":{"type":"object","properties":{"teamId":{"type":"string","description":"The identifier or key of the team associated with the issue"},"projectId":{"type":"string","description":"The identifier or key of the project associated with the issue"},"query":{"type":"string","description":"Search string to look for in issue titles. The query is used to filter issues where the title contains the query text (case insensitive)."},"stateId":{"type":"string","description":"Filter issues by their workflow state (status). States are scoped to the selected team."},"assigneeId":{"type":"string","description":"The user to assign to the issue"},"issueLabels":{"type":"array","items":{"type":"string"},"description":"The labels in the issue"},"orderBy":{"type":"string","enum":["createdAt","updatedAt"],"description":"By which field should the pagination order by. Available options are `createdAt` (default) and `updatedAt`."},"includeArchived":{"type":"boolean","description":"Should archived resources be included? (default: `false`)"},"limit":{"type":"integer","description":"Maximum number of issues to return. If no query is provided, this defaults to 20 to avoid returning too many results."}},"required":["teamId"],"additionalProperties":false,"$schema":"http://json-schema.org/draft-07/schema#"}}}
{"name":"linear-get-teams","label":"Get Teams","description":"Retrieves all teams in your Linear workspace. Returns array of team objects with details like ID, name, and key. Supports pagination with configurable limit. Uses OAuth authentication. See Linear docs for additional info [here](https://developers.linear.app/docs/graphql/working-with-the-graphql-api).","inputSchema":{"jsonSchema":{"type":"object","properties":{"limit":{"type":"integer","description":"Maximum number of teams to return. Defaults to 20 if not specified."}},"additionalProperties":false,"$schema":"http://json-schema.org/draft-07/schema#"}}}
{"name":"linear-get-issue","label":"Get Issue","description":"Retrieves a Linear issue by its ID. Returns complete issue details including title, description, state, assignee, team, project, labels, and timestamps. Uses OAuth authentication. See Linear docs for additional info [here](https://developers.linear.app/docs/graphql/working-with-the-graphql-api).","inputSchema":{"jsonSchema":{"type":"object","properties":{"issueId":{"type":"string","description":"The issue ID"}},"required":["issueId"],"additionalProperties":false,"$schema":"http://json-schema.org/draft-07/schema#"}}}
{"name":"linear-create-issue","label":"Create Issue","description":"Creates a new issue in Linear. Requires team ID and title. Optional: description, assignee, project, state. Returns response object with success status and issue details. Uses OAuth authentication. See Linear docs for additional info [here](https://developers.linear.app/docs/graphql/working-with-the-graphql-api#creating-and-editing-issues).","inputSchema":{"jsonSchema":{"type":"object","properties":{"teamId":{"type":"string","description":"The identifier or key of the team associated with the issue"},"projectId":{"type":"string","description":"The identifier or key of the project associated with the issue"},"title":{"type":"string","description":"The title of the issue."},"description":{"type":"string","description":"The issue description in markdown format"},"assigneeId":{"type":"string","description":"The user to assign to the issue"},"stateId":{"type":"string","description":"The state (status) to assign to the issue"}},"required":["teamId","title"],"additionalProperties":false,"$schema":"http://json-schema.org/draft-07/schema#"}}}