{"name":"github-update-project-v2-item-status","label":"Update Project (V2) Item Status","description":"Update the status of an item in the selected Project (V2). [See the documentation](https://docs.github.com/en/graphql/reference/mutations#updateprojectv2itemfieldvalue)","inputSchema":{"jsonSchema":{"type":"object","properties":{"org":{"type":"string","description":"The name of the Github organization (not case sensitive)."},"repo":{"type":"string","description":"The repository in a organization"},"project":{"type":"integer","description":"The project (V2) in a repository"},"item":{"type":"string","description":"The project item to update"},"status":{"type":"string","description":"The status to set for the item"},"moveToTop":{"type":"boolean","description":"If true, moves the item to the top of the column instead of the bottom."}},"required":["org","project","item","status"],"additionalProperties":false,"$schema":"http://json-schema.org/draft-07/schema#"}}}
{"name":"github-update-issue","label":"Update Issue","description":"Update a new issue in a Gihub repo. [See the documentation](https://docs.github.com/en/rest/issues/issues#update-an-issue)","inputSchema":{"jsonSchema":{"type":"object","properties":{"repoFullname":{"type":"string","description":"The name of the repository (not case sensitive). The format should be `owner/repo` (for example, `PipedreamHQ/pipedream`)."},"issueNumber":{"type":"integer","description":"The number that identifies the issue."},"title":{"type":"string","description":"The title of the issue"},"body":{"type":"string","description":"The text body of the issue"}},"required":["repoFullname","issueNumber","title"],"additionalProperties":false,"$schema":"http://json-schema.org/draft-07/schema#"}}}
{"name":"github-update-gist","label":"Update Gist","description":"Allows you to update a gist's description and to update, delete, or rename gist files. [See the documentation](https://docs.github.com/en/rest/gists/gists?apiVersion=2022-11-28#update-a-gist)","inputSchema":{"jsonSchema":{"type":"object","properties":{"gistId":{"type":"string","description":"The Gist Id to perform your action"},"description":{"type":"string","description":"The description of the gist"}},"required":["gistId"],"additionalProperties":false,"$schema":"http://json-schema.org/draft-07/schema#"}}}
{"name":"github-star-repo","label":"Star Repo","description":"Star a repository. [See the docs](https://docs.github.com/en/rest/activity/starring?apiVersion=2022-11-28#star-a-repository-for-the-authenticated-user) for more info.","inputSchema":{"jsonSchema":{"type":"object","properties":{"repoFullname":{"type":"string","description":"The name of the repository (not case sensitive). The format should be `owner/repo` (for example, `PipedreamHQ/pipedream`)."}},"required":["repoFullname"],"additionalProperties":false,"$schema":"http://json-schema.org/draft-07/schema#"}}}
{"name":"github-search-issues-and-pull-requests","label":"Search Issues and Pull Requests","description":"Find issues and pull requests by state and keyword. [See the documentation](https://docs.github.com/en/search-github/searching-on-github/searching-issues-and-pull-requests)","inputSchema":{"jsonSchema":{"type":"object","properties":{"query":{"type":"string","description":"The query contains one or more search keywords and qualifiers. [See the documentation](https://docs.github.com/en/search-github/searching-on-github/searching-issues-and-pull-requests) for more information and examples"},"maxResults":{"type":"integer","description":"The maximum amount of items to retrieve"}},"required":["query","maxResults"],"additionalProperties":false,"$schema":"http://json-schema.org/draft-07/schema#"}}}
{"name":"github-list-workflow-runs","label":"List Workflow Runs","description":"List workflowRuns for a repository [See the documentation](https://docs.github.com/en/rest/actions/workflow-runs?apiVersion=2022-11-28#list-workflow-runs-for-a-repository)","inputSchema":{"jsonSchema":{"type":"object","properties":{"repoFullname":{"type":"string","description":"The name of the repository (not case sensitive). The format should be `owner/repo` (for example, `PipedreamHQ/pipedream`)."},"limit":{"type":"integer","description":"The maximum quantity to be returned."}},"required":["repoFullname","limit"],"additionalProperties":false,"$schema":"http://json-schema.org/draft-07/schema#"}}}
{"name":"github-list-releases","label":"List Releases","description":"List releases for a repository [See the documentation](https://docs.github.com/en/rest/releases/releases?apiVersion=2022-11-28#list-releases)","inputSchema":{"jsonSchema":{"type":"object","properties":{"repoFullname":{"type":"string","description":"The name of the repository (not case sensitive). The format should be `owner/repo` (for example, `PipedreamHQ/pipedream`)."}},"required":["repoFullname"],"additionalProperties":false,"$schema":"http://json-schema.org/draft-07/schema#"}}}
{"name":"github-list-gists-for-a-user","label":"List Gists for a User","description":"Lists public gists for the specified user. [See the documentation](https://docs.github.com/en/rest/gists/gists?apiVersion=2022-11-28#list-gists-for-a-user)","inputSchema":{"jsonSchema":{"type":"object","properties":{"since":{"type":"string","description":"Only show notifications updated since the given time. This should be a timestamp in ISO 8601 format, e.g. `2018-05-16T09:30:10Z` or [another standard date/time format](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date#date_time_string_format)."}},"additionalProperties":false,"$schema":"http://json-schema.org/draft-07/schema#"}}}
{"name":"github-list-commits","label":"List Commits","description":"List commits in a Github repo. [See the documentation](https://docs.github.com/en/rest/commits/commits?apiVersion=2022-11-28#list-commits)","inputSchema":{"jsonSchema":{"type":"object","properties":{"repoFullname":{"type":"string","description":"The name of the repository (not case sensitive). The format should be `owner/repo` (for example, `PipedreamHQ/pipedream`)."},"sha":{"type":"string","description":"SHA or branch to start listing commits from. Default: the repository's default branch (usually main)."},"path":{"type":"string","description":"Only commits containing this file path will be returned"},"author":{"type":"string","description":"GitHub username or email address to use to filter by commit author."},"committer":{"type":"string","description":"GitHub username or email address to use to filter by commit committer"},"since":{"type":"string","description":"Only show results that were last updated after the given time. This is a timestamp in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`"},"until":{"type":"string","description":"Only commits before this date will be returned. This is a timestamp in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`"},"maxResults":{"type":"integer","description":"The maximum number of results to return. Defaults: `100`"}},"required":["repoFullname"],"additionalProperties":false,"$schema":"http://json-schema.org/draft-07/schema#"}}}
{"name":"github-get-workflow-run","label":"Get Workflow Run","description":"Gets a specific workflow run. [See the documentation](https://docs.github.com/en/rest/actions/workflow-runs?apiVersion=2022-11-28#get-a-workflow-run)","inputSchema":{"jsonSchema":{"type":"object","properties":{"repoFullname":{"type":"string","description":"The name of the repository (not case sensitive). The format should be `owner/repo` (for example, `PipedreamHQ/pipedream`)."},"workflowRunId":{"type":"string","description":"The Id of the workflow Run."}},"required":["repoFullname","workflowRunId"],"additionalProperties":false,"$schema":"http://json-schema.org/draft-07/schema#"}}}
{"name":"github-get-reviewers","label":"Get Reviewers","description":"Get reviewers for a PR ([see documentation](https://docs.github.com/en/rest/pulls/reviews#list-reviews-for-a-pull-request)) or Commit SHA ([see documentation](https://docs.github.com/en/rest/commits/commits#list-pull-requests-associated-with-a-commit)).","inputSchema":{"jsonSchema":{"type":"object","properties":{"repoFullname":{"type":"string","description":"The name of the repository (not case sensitive). The format should be `owner/repo` (for example, `PipedreamHQ/pipedream`)."},"prOrCommit":{"type":"string","enum":["Pull Request","Commit SHA"],"description":"Whether to get reviewers for a [pull request](https://docs.github.com/en/rest/pulls/reviews#list-reviews-for-a-pull-request) or a [commit SHA](https://docs.github.com/en/rest/commits/commits#list-pull-requests-associated-with-a-commit)."},"reviewStates":{"type":"array","items":{"type":"string","enum":["APPROVED","CHANGES_REQUESTED","COMMENTED","DISMISSED","PENDING"]},"description":"Filter by these review states"},"commitSha":{"type":"string","description":"Commit SHA to get reviewers for"}},"required":["repoFullname","prOrCommit"],"additionalProperties":false,"$schema":"http://json-schema.org/draft-07/schema#"}}}
{"name":"github-get-repository","label":"Get Repository Info","description":"Get information for a specific repository. [See the documentation](https://docs.github.com/en/rest/repos/repos#get-a-repository)","inputSchema":{"jsonSchema":{"type":"object","properties":{"repoFullname":{"type":"string","description":"The name of the repository (not case sensitive). The format should be `owner/repo` (for example, `PipedreamHQ/pipedream`)."}},"required":["repoFullname"],"additionalProperties":false,"$schema":"http://json-schema.org/draft-07/schema#"}}}
{"name":"github-get-repository-content","label":"Get Repository Content","description":"Get the content of a file or directory in a specific repository. [See the documentation](https://docs.github.com/en/rest/repos/contents#get-repository-content)","inputSchema":{"jsonSchema":{"type":"object","properties":{"repoFullname":{"type":"string","description":"The name of the repository (not case sensitive). The format should be `owner/repo` (for example, `PipedreamHQ/pipedream`)."},"path":{"type":"string","description":"The file path or directory to retrieve. Defaults to the repository's root directory."},"mediaType":{"type":"string","enum":["application/vnd.github.raw+json","application/vnd.github.html+json","application/vnd.github.object+json"],"description":"The media type of the response. [See the documentation](https://docs.github.com/en/rest/repos/contents?apiVersion=2022-11-28#get-repository-content) for more information."},"branch":{"type":"string","description":"The branch to use. Defaults to the repository's default branch (usually `main` or `master`)"}},"required":["repoFullname"],"additionalProperties":false,"$schema":"http://json-schema.org/draft-07/schema#"}}}
{"name":"github-get-issue-assignees","label":"Get Issue Assignees","description":"Get assignees for an issue in a Gihub repo. [See the documentation](https://docs.github.com/en/rest/issues/issues#get-an-issue)","inputSchema":{"jsonSchema":{"type":"object","properties":{"repoFullname":{"type":"string","description":"The name of the repository (not case sensitive). The format should be `owner/repo` (for example, `PipedreamHQ/pipedream`)."},"issueNumber":{"type":"integer","description":"The number that identifies the issue."}},"required":["repoFullname","issueNumber"],"additionalProperties":false,"$schema":"http://json-schema.org/draft-07/schema#"}}}
{"name":"github-get-commit","label":"Get Commit","description":"Get a commit in a Github repo. [See the documentation](https://docs.github.com/en/rest/commits/commits?apiVersion=2022-11-28#get-a-commit)","inputSchema":{"jsonSchema":{"type":"object","properties":{"repoFullname":{"type":"string","description":"The name of the repository (not case sensitive). The format should be `owner/repo` (for example, `PipedreamHQ/pipedream`)."},"commitSha":{"type":"string","description":"A commit SHA to retrieve"}},"required":["repoFullname","commitSha"],"additionalProperties":false,"$schema":"http://json-schema.org/draft-07/schema#"}}}
{"name":"github-enable-workflow","label":"Enable Workflow","description":"Enables a workflow and sets the **state** of the workflow to **active**. [See the documentation](https://docs.github.com/en/rest/actions/workflows?apiVersion=2022-11-28#enable-a-workflow)","inputSchema":{"jsonSchema":{"type":"object","properties":{"repoFullname":{"type":"string","description":"The name of the repository (not case sensitive). The format should be `owner/repo` (for example, `PipedreamHQ/pipedream`)."},"workflowId":{"type":"string","description":"The Id of the workflow."}},"required":["repoFullname","workflowId"],"additionalProperties":false,"$schema":"http://json-schema.org/draft-07/schema#"}}}
{"name":"github-disable-workflow","label":"Disable Workflow","description":"Disables a workflow and sets the **state** of the workflow to **disabled_manually**. [See the documentation](https://docs.github.com/en/rest/actions/workflows?apiVersion=2022-11-28#disable-a-workflow)","inputSchema":{"jsonSchema":{"type":"object","properties":{"repoFullname":{"type":"string","description":"The name of the repository (not case sensitive). The format should be `owner/repo` (for example, `PipedreamHQ/pipedream`)."},"workflowId":{"type":"string","description":"The Id of the workflow."}},"required":["repoFullname","workflowId"],"additionalProperties":false,"$schema":"http://json-schema.org/draft-07/schema#"}}}
{"name":"github-create-workflow-dispatch","label":"Create Workflow Dispatch","description":"Creates a new workflow dispatch event. [See the documentation](https://docs.github.com/en/rest/actions/workflows?apiVersion=2022-11-28#create-a-workflow-dispatch-event)","inputSchema":{"jsonSchema":{"type":"object","properties":{"repoFullname":{"type":"string","description":"The name of the repository (not case sensitive). The format should be `owner/repo` (for example, `PipedreamHQ/pipedream`)."},"workflowId":{"type":"string","description":"The Id of the workflow."},"ref":{"type":"string","description":"The git reference for the workflow. The reference can be a branch or tag name."}},"required":["repoFullname","workflowId","ref"],"additionalProperties":false,"$schema":"http://json-schema.org/draft-07/schema#"}}}
{"name":"github-create-repository","label":"Create Repository","description":"Creates a new repository for the authenticated user. [See the documentation](https://docs.github.com/en/rest/repos/repos#create-a-repository-for-the-authenticated-user)","inputSchema":{"jsonSchema":{"type":"object","properties":{"name":{"type":"string","description":"The name of the repository."},"teamId":{"type":"integer","description":"The id of the team that will be granted access to this repository. This is only valid when creating a repository in an organization."},"description":{"type":"string","description":"A short description of the repository."},"homepage":{"type":"string","description":"A URL with more information about the repository."},"private":{"type":"boolean","description":"Whether the repository is private."},"hasIssues":{"type":"boolean","description":"Whether issues are enabled."},"hasProjects":{"type":"boolean","description":"Whether projects are enabled."},"hasWiki":{"type":"boolean","description":"Whether the wiki is enabled."},"hasDiscussions":{"type":"boolean","description":"Whether discussions are enabled."},"autoInit":{"type":"boolean","description":"Whether the repository is initialized with a minimal README."},"hasDownloads":{"type":"boolean","description":"Whether downloads are enabled."},"isTemplate":{"type":"boolean","description":"Whether this repository acts as a template that can be used to generate new repositories."}},"required":["name"],"additionalProperties":false,"$schema":"http://json-schema.org/draft-07/schema#"}}}
{"name":"github-create-pull-request","label":"Create Pull Request","description":"Creates a new pull request for a specified repository. [See the documentation](https://docs.github.com/en/rest/pulls/pulls#create-a-pull-request)","inputSchema":{"jsonSchema":{"type":"object","properties":{"repoFullname":{"type":"string","description":"The base repository, where the pull request will be created."},"base":{"type":"string","description":"The base branch, where the changes will be received."},"headRepo":{"type":"string","description":"The head repository, where the changes originate from. This can, but does not have to, be the same repository."},"head":{"type":"string","description":"The head branch, where the changes originate from"},"body":{"type":"string","description":"The text description of the pull request."},"maintainerCanModify":{"type":"boolean","description":"Indicates whether [maintainers can modify](https://docs.github.com/articles/allowing-changes-to-a-pull-request-branch-created-from-a-fork/) the pull request."},"draft":{"type":"boolean","description":"Indicates whether the pull request is a draft. See \"[Draft Pull Requests](https://docs.github.com/articles/about-pull-requests#draft-pull-requests)\" in the GitHub Help documentation to learn more."},"title":{"type":"string","description":"The title of the pull request."},"issue":{"type":"integer","description":"An issue in the repository to convert to a pull request. The issue title, body, and comments will become the title, body, and comments on the new pull request."}},"required":["repoFullname","base","headRepo","head"],"additionalProperties":false,"$schema":"http://json-schema.org/draft-07/schema#"}}}
{"name":"github-create-or-update-file-contents","label":"Create or Update File Contents","description":"Create or update a file in a repository. [See the documentation](https://docs.github.com/en/rest/repos/contents#create-or-update-file-contents)","inputSchema":{"jsonSchema":{"type":"object","properties":{"repoFullname":{"type":"string","description":"The name of the repository (not case sensitive). The format should be `owner/repo` (for example, `PipedreamHQ/pipedream`)."},"path":{"type":"string","description":"The full path of the file to create. *If the file already exists, it will be updated.* Example: `path/to/file.txt`"},"fileContent":{"type":"string","description":"The raw contents of the file. *If the file already exists, the entire file will be overwritten.*"},"commitMessage":{"type":"string","description":"The commit message for this change."},"branch":{"type":"string","description":"The branch to use. Defaults to the repository's default branch (usually `main` or `master`)"}},"required":["repoFullname","path","fileContent","commitMessage"],"additionalProperties":false,"$schema":"http://json-schema.org/draft-07/schema#"}}}
{"name":"github-create-issue","label":"Create Issue","description":"Create a new issue in a Gihub repo. [See the documentation](https://docs.github.com/en/rest/issues/issues#create-an-issue)","inputSchema":{"jsonSchema":{"type":"object","properties":{"repoFullname":{"type":"string","description":"The name of the repository (not case sensitive). The format should be `owner/repo` (for example, `PipedreamHQ/pipedream`)."},"title":{"type":"string","description":"The title of the issue"},"body":{"type":"string","description":"The text body of the issue"}},"required":["repoFullname","title"],"additionalProperties":false,"$schema":"http://json-schema.org/draft-07/schema#"}}}
{"name":"github-create-issue-comment","label":"Create Issue Comment","description":"Create a new comment in a issue. [See the documentation](https://docs.github.com/en/rest/issues/comments#create-an-issue-comment)","inputSchema":{"jsonSchema":{"type":"object","properties":{"repoFullname":{"type":"string","description":"The name of the repository (not case sensitive). The format should be `owner/repo` (for example, `PipedreamHQ/pipedream`)."},"issueNumber":{"type":"integer","description":"The number that identifies the issue."},"body":{"type":"string","description":"The contents of the comment"}},"required":["repoFullname","issueNumber","body"],"additionalProperties":false,"$schema":"http://json-schema.org/draft-07/schema#"}}}
{"name":"github-create-gist","label":"Create Gist","description":"Allows you to add a new gist with one or more files. [See the documentation](https://docs.github.com/en/rest/gists/gists?apiVersion=2022-11-28#create-a-gist)","inputSchema":{"jsonSchema":{"type":"object","properties":{"description":{"type":"string","description":"The description of the gist"},"public":{"type":"boolean","description":"Indicates whether the gist is public or not"}},"required":["description","public"],"additionalProperties":false,"$schema":"http://json-schema.org/draft-07/schema#"}}}
{"name":"github-create-branch","label":"Create Branch","description":"Create a new branch in a Github repo. [See the documentation](https://docs.github.com/en/rest/git/refs?apiVersion=2022-11-28#create-a-reference)","inputSchema":{"jsonSchema":{"type":"object","properties":{"repoFullname":{"type":"string","description":"The name of the repository (not case sensitive). The format should be `owner/repo` (for example, `PipedreamHQ/pipedream`)."},"branchName":{"type":"string","description":"The name of the new branch that will be created"},"branchSha":{"type":"string","description":"The source branch that will be used to create the new branch. Defaults to the repository's default branch (usually `main` or `master`)"}},"required":["repoFullname","branchName"],"additionalProperties":false,"$schema":"http://json-schema.org/draft-07/schema#"}}}